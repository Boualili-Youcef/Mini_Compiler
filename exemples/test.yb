/*
// Tris a bubble 
let T = [3, 2, 5, 4, 1];
let i = 0;

// Je peux mettre let taille = len(T); c'est mieux

while (i < len(T) - 1) {
    let j = 0;
    while (j < len(T) - i - 1) {  // Remplacer n par len(T)
        if (T[j] > T[j + 1]) {
            let temp = T[j];
            T[j] = T[j + 1];
            T[j + 1] = temp;
        }
        j = j + 1;
    }
    i = i + 1;
}

// Normalement c'est bon
// Affichage du résultat
let k = 0;
while (k < len(T)) { 
    print(T[k]);
    k = k + 1;
}
*/


// D'autre programme pour le teste :
/* 
// Trouver le minimum et maximum d'un tableau
let arr = [42, 23, 74, 11, 65, 58, 94, 36, 99, 87];

let min = arr[0];
let max = arr[0];
let i = 1;

while (i < len(arr)) {
    if (arr[i] < min) {
        min = arr[i];
    }
    if (arr[i] > max) {
        max = arr[i];
    }
    i = i + 1;
}

print(min);  // Devrait afficher 11
print(max);  // Devrait afficher 99
*/

/*
// Calcul du PGCD avec l'algorithme d'Euclide
let a = 48;
let b = 18;

while (b != 0) {
    let temp = b;
    b = a % b; // Regarder j'ai meme le modulo haha ^_^
    a = temp;
}

print(a);  // Devrait afficher 6
*/

/*
// Le bas niveau c'est ultra fun 
// Bientot temple OS hommage a Terrence Andrew Davis le GOAT ultime
// Vérifier si un nombre est premier
let n = 17;
let isPrime = 1;  // 1 = vrai, 0 = faux

if (n <= 1) {
    isPrime = 0;
} 

let i = 2;
while (i * i <= n) {
    if (n % i == 0) {
        isPrime = 0;
    }
    i = i + 1;
}

print(isPrime);  // Devrait afficher 1 pour n=17 
*/

/* 
***************************************
        Inverser un tableau
***************************************
*/
let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
let start = 0;
let end = len(arr) - 1;

while (start < end) {
    let temp = arr[start];
    arr[start] = arr[end];
    arr[end] = temp;
    start = start + 1;
    end = end - 1;
}

// Afficher le tableau inversé
let i = 0;
while (i < len(arr)) {
    print(arr[i]); // Si ca affiche 10, 9, 8, .... je suis le GOAT (￣y▽￣)╭ Ohohoho..... 
    i = i + 1;
}
